{"version":3,"sources":["webpack:///./src/base/albumPage/index.vue?a69c","webpack:///src/base/albumPage/index.vue","webpack:///./src/base/albumPage/index.vue?112a","webpack:///./src/base/albumPage/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","title","load","imgUrl","name","albumId","idxId","idxComId","dishId","albumInfo","creator","avatarUrl","album","artist","picUrl","nickname","description","commentCount","info","shareCount","trackCount","size","subscribedCount","subscribed","playCount","on","startPlay","_l","tracks","songs","item","index","key","ar","al","id","audioSong","$event","setAudioList","staticRenderFns","data","components","songListPage","songList","created","getParams","_getInfo","setAlbumId","_getDishInfo","activated","lastAlbumId","$route","params","computed","methods","api","_getIdxInfo","selectPlay","list","startPlayAll","destroyed","component"],"mappings":"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","file":"static/js/group-albumPage.5e2ff572.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('song-list-page',{attrs:{\"title\":_vm.title,\"load\":_vm.load,\"imgUrl\":_vm.imgUrl,\"albumTitle\":_vm.name,\"albumId\":_vm.albumId,\"idxId\":_vm.idxId,\"idxComId\":_vm.idxComId,\"dishId\":_vm.dishId,\"creatorImgUrl\":_vm.albumInfo.creator ? _vm.albumInfo.creator.avatarUrl : _vm.albumInfo.album ? _vm.albumInfo.album.artist.picUrl:'',\"author\":_vm.albumInfo.creator ? _vm.albumInfo.creator.nickname : _vm.albumInfo.album ? _vm.albumInfo.album.artist.name : '',\"description\":_vm.albumInfo.description ? _vm.albumInfo.description : _vm.albumInfo.album ? _vm.albumInfo.album.description : '',\"commentCount\":_vm.albumInfo.commentCount ? _vm.albumInfo.commentCount : _vm.albumInfo.album ? _vm.albumInfo.album.info.commentCount : 0,\"shareCount\":_vm.albumInfo.shareCount ? _vm.albumInfo.shareCount : _vm.albumInfo.album ? _vm.albumInfo.album.info.shareCount : 0,\"trackCount\":_vm.albumInfo.trackCount ? _vm.albumInfo.trackCount : _vm.albumInfo.album ? _vm.albumInfo.album.size : 0,\"subscribedCount\":_vm.albumInfo.subscribedCount,\"subscribed\":_vm.albumInfo.subscribed,\"isSubIn\":_vm.albumInfo.subscribed,\"playCount\":_vm.albumInfo.playCount},on:{\"startPlayAll\":_vm.startPlay}},_vm._l((_vm.albumInfo.tracks || _vm.albumInfo.songs),function(item,index){return _c('song-list',{key:index,attrs:{\"songName\":item.name,\"artists\":item.ar,\"albumName\":item.al.name,\"num\":index + 1,\"nowSong\":item.id === _vm.audioSong.id},on:{\"beginSong\":function($event){return _vm.setAudioList(item, index)}}})}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- 通过传递参数给子组件，标题，加载样式，图片链接，歌单名称，作者头像，作者昵称，歌单介绍，评论数，分享数，歌单歌曲数，收藏数，是否收藏 -->\n  <song-list-page :title=\"title\"\n                  :load=\"load\"\n                  :imgUrl=\"imgUrl\"\n                  :albumTitle=\"name\"\n                  :albumId=\"albumId\"\n                  :idxId=\"idxId\"\n                  :idxComId=\"idxComId\"\n                  :dishId=\"dishId\"\n                  :creatorImgUrl=\"albumInfo.creator ? albumInfo.creator.avatarUrl : albumInfo.album ? albumInfo.album.artist.picUrl:''\"\n                  :author=\"albumInfo.creator ? albumInfo.creator.nickname : albumInfo.album ? albumInfo.album.artist.name : ''\"\n                  :description=\"albumInfo.description ? albumInfo.description : albumInfo.album ? albumInfo.album.description : ''\"\n                  :commentCount=\"albumInfo.commentCount ? albumInfo.commentCount : albumInfo.album ? albumInfo.album.info.commentCount : 0\"\n                  :shareCount=\"albumInfo.shareCount ? albumInfo.shareCount : albumInfo.album ? albumInfo.album.info.shareCount : 0\"\n                  :trackCount=\"albumInfo.trackCount ? albumInfo.trackCount : albumInfo.album ? albumInfo.album.size : 0\"\n                  :subscribedCount=\"albumInfo.subscribedCount\"\n                  :subscribed=\"albumInfo.subscribed\"\n                  :isSubIn=\"albumInfo.subscribed\"\n                  :playCount=\"albumInfo.playCount\"\n                  @startPlayAll=\"startPlay\">\n    <!-- 这是一个通用的用来展示歌曲列表的组件，通过for循环组件进行渲染  这里使用 index+1 展示了页面的索引值 -->\n    <song-list v-for=\"(item, index) in albumInfo.tracks || albumInfo.songs\"\n               :key=\"index\"\n               :songName=\"item.name\"\n               :artists=\"item.ar\"\n               :albumName=\"item.al.name\"\n               :num=\"index + 1\"\n               @beginSong=\"setAudioList(item, index)\"\n               :nowSong=\"item.id === audioSong.id\"></song-list>\n  </song-list-page>\n</template>\n\n<script>\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\nimport songList from 'base/song'\nimport songListPage from 'base/songListPage'\nimport api from 'api'\n\nexport default {\n  name: 'albumPage',\n  data () {\n    return {\n      // 存储信息的数组\n      albumInfo: [],\n      // 用来定义是否显示load加载组件\n      load: true,\n      dishId: 0,\n      idxId: 0,\n      idxComId: 0,\n      albumId: 0,\n      title: '',\n      imgUrl: '',\n      name: ''\n    }\n  },\n  components: {\n    songListPage,\n    songList\n  },\n  /**\n   * 生命钩子函数在实例创建完成后被立即调用\n   */\n  created () {\n    this.getParams()\n    this.load = true\n    this.albumInfo = []\n    let dishId = this.$route.params.dishId\n    if (this.albumId) {\n      this.title = '歌单'\n      this._getInfo(this.albumId)\n      this.setAlbumId(this.albumId)\n      return\n    }\n    if (dishId) {\n      this.title = '专辑'\n      this.dishId = +dishId\n      this._getDishInfo(dishId)\n    }\n  },\n  activated () {\n    if (this.lastAlbumId !== this.$route.params.albumId) {\n      this.load = true\n      this.getParams()\n      this._getInfo(this.albumId)\n      this.setAlbumId(this.albumId)\n    }\n  },\n  computed: {\n    ...mapGetters({ audioSong: 'AUDIO_ING_SONG', lastAlbumId: 'ALBUM_ID' })\n  },\n  methods: {\n    ...mapMutations({ setAlbumId: 'SET_USING_ALBUM_ID' }),\n    /**\n     * 根据传入的id获取歌单信息\n     *\n     * 这里需要增加 catch 方法！！！\n     */\n    _getInfo (id) {\n      // 这里使用的是定义的接口信息，详情查看 api 文件夹\n      api.albumDetailFn(id)\n        // 请求成功后返回数据\n        .then(res => {\n          console.log(res.data)\n          // 接受数据\n          const data = res.data\n          // 查看返回数据的 code 状态，如果是 200 的话进行使用\n          if (data.code === 200) {\n            // 将请求回来的数据使用，将load 样式关闭\n            this.albumInfo = data.playlist\n            this.load = false\n          }\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    },\n    /**\n     * 获取排行榜信息\n     */\n    _getIdxInfo (id) {\n      api.idxListFn(id)\n        .then(res => {\n          const data = res.data\n          if (data.code === 200) {\n            this.albumInfo = data.playlist\n            this.idxComId = data.playlist.id\n            this.load = false\n          }\n        })\n    },\n    /**\n     * 获取专辑内容\n     */\n    _getDishInfo (id) {\n      api.getDishInfoFn(id)\n        .then(res => {\n          console.log(res.data)\n          const data = res.data\n          if (data.code === 200) {\n            this.albumInfo = data\n            this.load = false\n          }\n        })\n    },\n    setAudioList (item, index) {\n      this.selectPlay({\n        list: this.albumInfo.tracks || this.albumInfo.songs,\n        index\n      })\n    },\n    startPlay () {\n      this.startPlayAll({\n        list: this.albumInfo.tracks || this.albumInfo.songs\n      })\n    },\n    getParams () {\n      this.albumId = +this.$route.params.albumId || 0\n      this.name = this.$route.params.name\n      this.imgUrl = this.$route.params.imgUrl\n    },\n    ...mapActions(['selectPlay', 'startPlayAll'])\n  },\n  destroyed () {\n    // 存储信息的数组\n    this.albumInfo = []\n    // 用来定义是否显示load加载组件\n    this.load = true\n  }\n}\n</script>\n\n<style lang='less' scoped>\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1df477ac&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1df477ac\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}